version: '2.4'
services:
  ngrok:
    image: wernight/ngrok:latest
    ports:
      - "4040:4040"
    environment:
      NGROK_PROTOCOL: http
      NGROK_PORT: ors-app:8080
      NGROK_AUTH: ${NGROK_AUTH}
    depends_on:
      ors-app:
        condition: service_healthy
  ors-app:
    container_name: ors-app
    ports:
      - "8080:8080"
      - "9001:9001"
    image: openrouteservice/openrouteservice:latest
    user: "${ORS_UID:-0}:${ORS_GID:-0}"
    volumes:
      - ./graphs:/ors-core/data/graphs
      - ./elevation_cache:/ors-core/data/elevation_cache
      - ./logs/ors:/var/log/ors
      - ./logs/tomcat:/usr/local/tomcat/logs
      - ./conf:/ors-conf
      - ./argentina-latest.osm.pbf:/ors-core/data/osm_file.pbf
    healthcheck:
      # Trata de pingear la url de health cada 2 minutos
      # jq parsea el resultado como json y obtiene el campo solicitado, el flag "-r" remueve las comillas del resultado
      # grep verifica que el resultado obtenido en el paso anterior sea exactamente ready y no not ready, sino falla
      test: bash -c "curl --fail http://localhost:8080/ors/v2/health | jq -r .status | grep ^ready$$ || exit 1"
      interval: 2m
      timeout: 10s
      retries: 5
    environment:
      - BUILD_GRAPHS=False  # Forces the container to rebuild the graphs, e.g. when PBF is changed
      - "JAVA_OPTS=-Djava.awt.headless=true -server -XX:TargetSurvivorRatio=75 -XX:SurvivorRatio=64 -XX:MaxTenuringThreshold=3 -XX:+UseG1GC -XX:+ScavengeBeforeFullGC -XX:ParallelGCThreads=4 -Xms1g -Xmx2g"
      - "CATALINA_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9001 -Dcom.sun.management.jmxremote.rmi.port=9001 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost"